package com.hanmiit.app.rfid.blasterdemo.util;

import java.util.Locale;

import com.hanmiit.app.rfid.blasterdemo.R;

public class ResUtil {
	
	public static String getId(int id) {
		switch (id) {
		case android.R.id.home:
			return "home";
		case R.id.access_password:
			return "access_password";
		case R.id.action:
			return "action";
		case R.id.action_access_password:
			return "action_access_password";
		case R.id.action_block_write:
			return "action_block_write";
		case R.id.action_erase:
			return "action_erase";
		case R.id.action_kill:
			return "action_kill";
		case R.id.action_kill_password:
			return "action_kill_password";
		case R.id.action_lock:
			return "action_lock";
		case R.id.action_perma_lock:
			return "action_perma_lock";
		case R.id.action_read:
			return "action_read";
		case R.id.action_unlock:
			return "action_unlock";
		case R.id.action_write:
			return "action_write";
		case R.id.add:
			return "add";
		case R.id.add_mask:
			return "add_mask";
		case R.id.address:
			return "address";
		case R.id.address1:
			return "address1";
		case R.id.address2:
			return "address2";
		case R.id.address3:
			return "address3";
		case R.id.address4:
			return "address4";
		case R.id.aimer_delay:
			return "aimer_delay";
		case R.id.aimer_mode:
			return "aimer_mode";
		case R.id.app_logo:
			return "app_logo";
		case R.id.auto_off_time:
			return "auto_off_time";
		case R.id.background:
			return "background";
		case R.id.bank:
			return "bank";
		case R.id.bank_layout:
			return "bank_layout";
		case R.id.bank_line:
			return "bank_line";
		case R.id.barcode:
			return "barcode";
		case R.id.barcode_count:
			return "barcode_count";
		case R.id.barcode_demo:
			return "barcode_demo";
		case R.id.barcode_option:
			return "barcode_option";
		case R.id.barcodes:
			return "barcodes";
		case R.id.battery:
			return "battery";
		case R.id.battery_interval:
			return "battery_interval";
		case R.id.buzzer:
			return "buzzer";
		case R.id.cancel:
			return "cancel";
		case R.id.cb_checkbox:
			return "cb_checkbox";
		case R.id.clear:
			return "clear";
		case R.id.clear_mask:
			return "clear_mask";
		case R.id.code_id:
			return "code_id";
		case R.id.code_type:
			return "code_type";
		case R.id.continuous_mode:
			return "continuous_mode";
		case R.id.count:
			return "count";
		case R.id.debug_message:
			return "debug_message";
		case R.id.debug_mode_off:
			return "debug_mode_off";
		case R.id.debug_mode_on:
			return "debug_mode_on";
		case R.id.debug_view:
			return "debug_view";
		case R.id.default_all_symbologies:
			return "default_all_symbologies";
		case R.id.demo_version:
			return "demo_version";
		case R.id.disable_all_symbologies:
			return "disable_all_symbologies";
		case R.id.display_pc:
			return "display_pc";
		case R.id.edit:
			return "edit";
		case R.id.edit_mask:
			return "edit_mask";
		case R.id.enable_all_symbologies:
			return "enable_all_symbologies";
		case R.id.epc:
			return "epc";
		case R.id.export_tags:
			return "export_tags";
		case R.id.file_list:
			return "file_list";
		case R.id.file_name:
			return "file_name";
		case R.id.filter_inventory:
			return "filter_inventory";
		case R.id.firmware_version:
			return "firmware_version";
		case R.id.session_flag:
			return "session_flag";
		case R.id.idle_time:
			return "idle_time";
		case R.id.illumination_lights:
			return "illumination_lights";
		case R.id.import_tags:
			return "import_tags";
		case R.id.inventory:
			return "inventory";
		case R.id.inventory_session:
			return "inventory_session";
		case R.id.inventory_time:
			return "inventory_time";
		case R.id.key_action:
			return "key_action";
		case R.id.kill_password:
			return "kill_password";
		case R.id.lbt_channel:
			return "lbt_channel";
		case R.id.length:
			return "length";
		case R.id.load:
			return "load";
		case R.id.load_debug:
			return "load_debug";
		case R.id.mask:
			return "mask";
		case R.id.mask_action:
			return "mask_action";
		case R.id.mask_bank:
			return "mask_bank";
		case R.id.mask_count:
			return "mask_count";
		case R.id.mask_length:
			return "mask_length";
		case R.id.mask_list:
			return "mask_list";
		case R.id.mask_offset:
			return "mask_offset";
		case R.id.mask_target:
			return "mask_target";
		case R.id.mask_type:
			return "mask_type";
		case R.id.mask_value:
			return "mask_value";
		case R.id.match_mode:
			return "match_mode";
		case R.id.menu_connect_ble_device:
			return "menu_connect_ble_device";
		case R.id.menu_connect_bt_device:
			return "menu_connect_bt_device";
		case R.id.menu_connect_new_bt_device:
			return "menu_connect_new_bt_device";
		case R.id.menu_disconnect:
			return "menu_disconnect";
		case R.id.message:
			return "message";
		case R.id.name:
			return "name";
		case R.id.offset:
			return "offset";
		case R.id.ok:
			return "ok";
		case R.id.operation_time:
			return "operation_time";
		case R.id.option:
			return "option";
		case R.id.option_default:
			return "option_default";
		case R.id.password:
			return "password";
		case R.id.password_layout:
			return "password_layout";
		case R.id.path:
			return "path";
		case R.id.phase:
			return "phase";
		case R.id.power_gain:
			return "power_gain";
		case R.id.progress_bar:
			return "progress_bar";
		case R.id.radio:
			return "radio";
		case R.id.read_memory:
			return "read_memory";
		case R.id.read_timeout:
			return "read_timeout";
		case R.id.remove:
			return "remove";
		case R.id.remove_mask:
			return "remove_mask";
		case R.id.report_mode:
			return "report_mode";
		case R.id.report_rssi:
			return "report_rssi";
		case R.id.reread_delay:
			return "reread_delay";
//		case R.id.rescan_time:
//			return "rescan_time";
		case R.id.rssi:
			return "rssi";
		case R.id.rssi_background:
			return "rssi_background";
		case R.id.rssi_split:
			return "rssi_split";
		case R.id.save:
			return "save";
		case R.id.save_debug:
			return "save_debug";
		case R.id.save_symbologies:
			return "save_symbologies";
		case R.id.selection:
			return "selection";
		case R.id.set_option:
			return "set_option";
		case R.id.speed:
			return "speed";
		case R.id.stored_mode:
			return "stored_mode";
		case R.id.stored_tag:
			return "stored_tag";
		case R.id.stored_tag_count:
			return "stored_tag_count";
		case R.id.sub_items:
			return "sub_items";
		case R.id.symbol_list:
			return "symbol_list";
		case R.id.symbols:
			return "symbols";
		case R.id.value:
			return "value";
		case R.id.tag_access:
			return "tag_access";
		case R.id.tag_count:
			return "tag_count";
		case R.id.tag_list:
			return "tag_list";
		case R.id.tag_phase:
			return "tag_phase";
		case R.id.tag_rssi:
			return "tag_rssi";
		case R.id.tag_value:
			return "tag_value";
		case R.id.target:
			return "target";
		case R.id.tid:
			return "tid";
		case R.id.total_tag_count:
			return "total_tag_count";
		case R.id.used:
			return "used";
		case R.id.user:
			return "user";
		case R.id.value1:
			return "value1";
		case R.id.value2:
			return "value2";
		case R.id.value3:
			return "value3";
		case R.id.value4:
			return "value4";
		case R.id.write_memory:
			return "write_memory";
		case R.id.write_value:
			return "write_value";
		}
		return String.format(Locale.US, "%d", id);
	}
}
